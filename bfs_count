# BOF: Breadth First Search 너비 우선 탐색
# 가까운 노드부터 탐색하는 알고리즘
# queue, while문을 사용한다.

# 1. 큐에 탐색 시작 노드 삽입, 방문 처리
# 2. 큐에서 노드를 꺼내 해당 노드의 인접 노드 중 방문하지 않은 노드를 모두 큐에 삽입, 방문 처리
# 3. 큐에 노드가 남지 않을 때까지 2번 반복

from collections import deque

# 연결된 노드의 개수 세는 함수
# 노드 i가 인접한 노드가 graph[i]에 서로 저장되어 있어야 한다.
def bfs(graph, v, visited):
    count = 0
    queue = deque()
    visited[v] = True
    queue.append(v)
    while queue:
        v = queue.popleft()
        for i in graph[v]:
            if not visited[i]:
                queue.append(i)
                visited[i] = True
                count += 1
    return count

# 이것이 취업을 위한 코딩 테스트다 with 파이썬을 참고하였습니다.
